name: BuildTestDeploy
on:
  workflow_dispatch:
  push:
    tags:
      - "v[0-9]+.[0-9]+.[0-9]+"
  pull_request:
    branches:
      - 'main'
    paths-ignore:
      - '.editorconfig'
      - '.gitattributes'
      - '.gitignore'
      - '.runsettings'
      - 'LICENSE.txt'
      - 'README.md'

env:
  # Stop wasting time caching packages
  DOTNET_SKIP_FIRST_TIME_EXPERIENCE: true
  # Disable sending usage data to Microsoft
  DOTNET_CLI_TELEMETRY_OPTOUT: true
  Owner: ${{ github.repository_owner }}
  # GitHub Packages Feed settings
  GITHUB_FEED: https://nuget.pkg.github.com/${{ github.repository_owner }}/index.json
  GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
  # Official NuGet Feed settings
  NUGET_FEED: https://api.nuget.org/v3/index.json
  NUGET_KEY: ${{ secrets.NUGET_KEY }}
  SOLUTION_NAME: Vectron.Library.Ethernet.sln
jobs:
  build-and-test:
    strategy:
      matrix:
        os: [ ubuntu-latest, windows-latest, macos-latest ]
        dotnet-version: ['6.0.x', '7.0.x' ]
    runs-on: ${{ matrix.os }}
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: ${{ matrix.dotnet-version }}
    - name: Install dependencies
      run: dotnet restore ${{ env.SOLUTION_NAME }}
    - name: Build
      run: >
        dotnet build ${{ env.SOLUTION_NAME }}
        --configuration Release
        --no-restore
    - name: Test
      run: >
        dotnet test ${{ env.SOLUTION_NAME }}
        --configuration Release
        --verbosity normal
        --no-build
        --nologo
        --collect "Code Coverage"
        --settings .runsettings
        --results-directory ./bin/TestResults
        --logger GitHubActions

  deploy:
    if: github.ref == 'refs/heads/main' || contains(github.ref, 'refs/tags/')
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      packages: write
    steps:
    - name: Checkout
      uses: actions/checkout@v3
      with:
        fetch-depth: 0 # avoid shallow clone so nbgv can do its work.
    - name: Setup .NET
      uses: actions/setup-dotnet@v3
      with:
        dotnet-version: '7.0.x'
    - name: Nerdbank.GitVersioning
      uses: dotnet/nbgv@master
      with:
        setAllVars: true
    - name: Install dependencies
      run: dotnet restore ${{ env.SOLUTION_NAME }}
    - name: Pack
      run: >
        dotnet pack ${{ env.SOLUTION_NAME }}
        --configuration Release
        --verbosity normal
        --nologo
        --no-restore
        /p:Version=${{ env.NBGV_SemVer2 }}
        --output ./bin/Pack/
    - name: Setup github remotes
      run: >
        dotnet nuget add source $GITHUB_FEED
        --username $Owner
        --password $GITHUB_TOKEN
        --store-password-in-clear-text
        --name github
    - name: Push to GitHub Feed
      run: >
        dotnet nuget push ./bin/Pack/*.nupkg
        --source "github"
        --skip-duplicate
        --api-key $GITHUB_TOKEN
    - name: Push to NuGet Feed
      if: env.NBGV_PublicRelease == 'true'
      run: >
        dotnet nuget push ./bin/Pack/*.nupkg
        --source $NUGET_FEED
        --skip-duplicate
        --api-key $NUGET_KEY

  release:
    if: contains(github.ref, 'refs/tags/')
    needs: build-and-test
    runs-on: ubuntu-latest
    permissions:
      deployments: write
      contents: write
    steps:
      - name: "Create release"
        env:
          tag: ${{ github.ref_name }}
        run: >
          gh release create "$tag"
          --repo="$GITHUB_REPOSITORY"
          --title="${GITHUB_REPOSITORY#*/} ${tag#v}"
          --generate-notes
